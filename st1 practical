{hewllo
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b955e128",
   "metadata": {},
   "outputs": [
    {ftgybhu
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter rollno:2310992427\n",
      "remainder: 3\n"
     ]
    }
   ],
   "source": [
    "number_str=input(\"enter rollno:\")\n",
    "sum=0\n",
    "for char in number_str:\n",
    "    if char .isdigit():\n",
    "        sum += int(char)\n",
    "    \n",
    "remainder=sum % 4\n",
    "print(\"remainder:\",remainder)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7c51ac5c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter a number: 25\n",
      "25is an automorphic number.\n"
     ]
    }
   ],
   "source": [
    "#automorphic or not\n",
    "def is_automorphic(number):\n",
    "    square=number**2\n",
    "    number_str= str(number)\n",
    "    square_str = str(square)\n",
    "    return square_str.endswith(number_str)\n",
    "number= int (input(\"enter a number: \"))\n",
    "if is_automorphic(number):\n",
    "    print(f\"{number}is an automorphic number.\")\n",
    "else:\n",
    "    print(f\"{number}is not an automorphic number.\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
